// <auto-generated />
using System;
using EmailAlert.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmailAlert.Data.Migrations
{
    [DbContext(typeof(EmailAlertDbContext))]
    [Migration("20190806152455_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmailAlert.Domain.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "albertcmiller1@gmail.com",
                            Password = "22732235Fly"
                        },
                        new
                        {
                            Id = 2,
                            Email = "alflyboymiller@yahoo.com",
                            Password = "Password"
                        });
                });

            modelBuilder.Entity("EmailAlert.Domain.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin");

                    b.Property<string>("Content");

                    b.Property<bool>("DownFive");

                    b.Property<string>("From");

                    b.Property<bool>("MovingAvg");

                    b.Property<string>("Subject");

                    b.Property<bool>("UpFive");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("EmailAlert.Domain.RegisteredUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Admin");

                    b.Property<bool>("DownFive");

                    b.Property<string>("Email");

                    b.Property<int?>("EmailId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("MovingAvg");

                    b.Property<bool>("UpFive");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.ToTable("RegisteredUsers");
                });

            modelBuilder.Entity("EmailAlert.Domain.Ticker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RegisteredUserId");

                    b.Property<string>("stock");

                    b.HasKey("Id");

                    b.HasIndex("RegisteredUserId");

                    b.ToTable("Ticker");
                });

            modelBuilder.Entity("EmailAlert.Domain.RegisteredUser", b =>
                {
                    b.HasOne("EmailAlert.Domain.Email")
                        .WithMany("Recipiants")
                        .HasForeignKey("EmailId");
                });

            modelBuilder.Entity("EmailAlert.Domain.Ticker", b =>
                {
                    b.HasOne("EmailAlert.Domain.RegisteredUser")
                        .WithMany("Stocks")
                        .HasForeignKey("RegisteredUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
